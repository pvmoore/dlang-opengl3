#version 430 core
/**
 * Read/write image example.
 */

layout(local_size_x = 8, local_size_y = 8) in;

layout(binding = 0, rgba8ui)
uniform readonly uimage2D imageIn;

layout(binding = 1, rgba8)
uniform writeonly image2D imageOut;

uvec2 SIZE = imageSize(imageIn);

uint getByte(uint byteIndex) {
    uint b = byteIndex >> 2;
    uint y = b / SIZE.x;
    uint x = b - (y*SIZE.x);
    uvec4 v     = imageLoad(imageIn, ivec2(x,y));
    uint offset = byteIndex&3u;
    return v[offset];
}
uint getByte(uint byteIndex, in uvec4 v) {
    uint offset = byteIndex&3u;
    return v[offset];
}

void main() {
	ivec2 pos       = ivec2(gl_GlobalInvocationID.xy);
	uvec2 localPos  = gl_LocalInvocationID.xy;
	uint localIndex = gl_LocalInvocationIndex;

	uint pixelIndex = gl_GlobalInvocationID.x +
	                  gl_GlobalInvocationID.y*SIZE.x;

    if(pos==vec2(0,0)) {

    }

    uint i = pixelIndex*4;

    uvec4 b = uvec4(
        getByte(i+0u),
        getByte(i+1u),
        getByte(i+2u),
        getByte(i+3u)
    );


    vec4 pixel = vec4(
        pos.x*(1/704.0),
        pos.y*(1/704.0),
        pos.x*(1/704.0),
        1);

    imageStore(imageOut, pos, pixel);

//    uvec4 bytes = imageLoad(imageIn, pos);
//
//    vec4 fpixel = vec4(bytes)/256.0;
//
//	imageStore(imageOut, pos, fpixel);
}